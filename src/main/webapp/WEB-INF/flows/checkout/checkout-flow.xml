<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
       http://www.springframework.org/schema/webflow/spring-webflow.xsd">
    <var name="order" class="com.packt.webstore.domain.Order"/>
    <action-state id="addCartToOrder">
        <evaluate expression="cartServiceImpl.validate(requestParameters.cartId)" result="order.cart"/>
        <transition to="InvalidCartWarning" on-exception="com.packt.webstore.exception.InvalidCartException"/>
        <transition to="collectCustomerId"/>
    </action-state>

    <view-state id="collectCustomerId" model="order">
        <transition on="customerIdCollected" to="checkCustomerExist"/>
    </view-state>

    <decision-state id="checkCustomerExist">
        <if test="customerServiceImpl.isCustomerExist(order.customer.customerId)"
            then="getCustomerFromRepository"
            else="collectCustomerInfo"/>
    </decision-state>

    <action-state id="getCustomerFromRepository">
        <evaluate expression="customerServiceImpl.getCustomer(order.customer.customerId)" result="order.customer"/>
        <transition to="collectShippingDetail"/>
    </action-state>

    <view-state id="collectCustomerInfo" view="collectCustomerInfo.jsp" model="order">
        <transition on="customerInfoCollected" to="saveCustomerInRepository"/>
    </view-state>

    <action-state id="saveCustomerInRepository">
        <evaluate expression="customerServiceImpl.saveCustomer(order.customer)"/>
        <transition to="collectShippingDetail"/>
    </action-state>

    <view-state id="collectShippingDetail" model="order">
        <transition on="shippingDetailCollected" to="orderConfirmation"/>
        <transition on="backToCollectCustomerInfo" to="collectCustomerInfo"/>
    </view-state>

    <view-state id="orderConfirmation">
        <transition on="orderConfirmed" to="processOrder"/>
        <transition on="backToCollectShippingDetail" to="collectShippingDetail"/>
    </view-state>

    <action-state id="processOrder">
        <evaluate expression="orderServiceImpl.saveOrder(order)" result="order.orderId"/>
        <transition to="thankCustomer"/>
    </action-state>

    <view-state id="InvalidCartWarning">
        <transition to="endState"/>
    </view-state>

    <view-state id="thankCustomer" model="order">
        <transition to="endState"/>
    </view-state>

    <end-state id="endState"/>

    <end-state id="cancelCheckout" view="checkOutCancelled.jsp"/>

    <global-transitions>
        <transition on="cancel" to="cancelCheckout"/>
    </global-transitions>
</flow>